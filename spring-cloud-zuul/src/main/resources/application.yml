server:
  port: 9000

lucky-word: (Zuul) Greeting My Own #will be overriden

#ZuulProperties
zuul:
  ignoredServices: '*'  #all services are ignored by default 
  sensitiveHeaders: #(global default)ignore headers to be sent to downstream systems
  retryable: true    #是否开启重试功能
  routes:
    customer:                         # 可以随便写，在zuul上面唯一即可；当这里的值 = service-id时，service-id可以不写。
      path: /customer/**              # 想要映射到的路径
      serviceId: customer-service
      stripPrefix: false
#      sensitiveHeaders: Cookie,Set-Cookie,Authorization #(default)ignore headers to be sent to downstream systems
      retryable: true
#    auth-server:
#      path: /login/**
#      serviceId: auth-server
#      stripPrefix: false
#      sensitiveHeaders: Cookie,Set-Cookie
    user:
      path: /user/**
      url: http://localhost:9999/uaa/user     
    resource:
      path: /resource/**
      url: http://localhost:9090
#      serviceId: resource-service
#      stripPrefix: false
#      sensitiveHeaders: 
      
#management:
##  port: 59000
#  security:
#    enabled: false  #disable security/authentication for demo
    
#zuul.host.maxTotalConnections: 200
#zuul.host.maxPerRouteConnections: 20

eureka:
  client:
    healthcheck:  #开启健康检查(需要spring-boot-starter-actuator依赖)
      enabled: true
  instance:
    lease-expiration-duration-in-seconds: 30  #租期到期时间，默认90秒
    lease-renewal-interval-in-seconds: 10     #租赁更新时间间隔，默认30，即30秒发送一次心跳


spring:
  cloud:
    loadbalancer:
      retry:          #启动负载均衡的重试机制，默认false
        enabled: true

#hystrix:
#  command:
#    default:
#      execution:
#        timeout:            #Hystrix是否启用超时时间
#          enabled: true
#      isolation:
#        thread:
#          timeoutInMilliseconds: 2000       #Hystrix断路器的超时时间，默认是1s，断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
#  stream:
#    dashboard:
#      intervalInMilliseconds: 5000     #hystrix dashboard的信息收集频率，默认500毫秒

#ribbon:
#  ConnectTimeout: 250    #ribbon请求连接的超时时间
#  ReadTimeout: 1000     #请求处理的超时时间
#  OkToRetryOnAllOperations: true    #对所有请求操作都进行重试
#  MaxAutoRetries: 0      #对当前服务的重试次数（第一次分配给9082的时候，如果404，则再重试MaxAutoRetries次，如果还是404，则切换到其他服务MaxAutoRetriesNextServer决定）
#  MaxAutoRetriesNextServer: 1     #切换服务的次数(比如本次请求分配给9082处理，发现404，则切换分配给9081处理，如果还是404，则返回404给客户端）
#  httpclient:
#    enabled: true  


#proxy:
#  auth:
#    routes:
#      customer: passthru
#      sample: passthru
      
#https://github.com/spring-cloud-samples/sso/blob/master/src/main/resources/application.yml
#security.user.password: password
#security.ignored: /,/favicon.ico,/index.html,/home.html,/dashboard.html,/js/**,/css/**,/webjars/**
#  sessions: ALWAYS
#  oauth2:
#    sso:
#      loginPath: /dashboard/login
#management:
#  security:
#    role: HERO

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.web.util.matcher: OFF
    com.netflix.discovery: OFF

#---
#spring:
#  profiles: default
security:
#  user:
#    name: user
#    password: password
#  ignored: "*.bundle.*"
  oauth2:
    client:
      accessTokenUri: http://localhost:9999/uaa/oauth/token
      userAuthorizationUri: http://localhost:9999/uaa/oauth/authorize
      clientId: zuulgateway
      clientSecret: zuulsecret
    resource:
      userInfoUri: http://localhost:9999/uaa/user
#      jwt:
#        keyValue: |
#          -----BEGIN PUBLIC KEY-----
#          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
#          -----END PUBLIC KEY-----
#      id: openid
#      serviceId: ${PREFIX:}resource

#---
#spring:
#  profiles: github
#security:
#  oauth2:
#    client:
#      clientId: 89630a412fa314777dc2
#      clientSecret: c7a29ec26ec7805e78b496ea67cc13e5a9b8bcf0
#      accessTokenUri: https://github.com/login/oauth/access_token
#      userAuthorizationUri: https://github.com/login/oauth/authorize
#      clientAuthenticationScheme: form
#    resource:
#      userInfoUri: https://api.github.com/user
#      preferTokenInfo: false      
